,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,;
,,,;       CALC.ASM        MPB     Ver 1.0         28-8-05
,,,;
,,,;       Simple calculator
,,,;       Single digit input, two digit results
,,,;       Integer handling only
,,,;
,,,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,
,,,        PROCESSOR 16F877
,,,;       Clock = XT 4MHz, standard fuse settings
00002007,3731,,        __CONFIG 0x3731
,,,
,,,;       LABEL EQUATES   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,
,,,        INCLUDE "P16F877A.INC"
,,,
,,,
,,,Char    EQU     30      ; Display character code
,,,Num1    EQU     31      ; First number input
,,,Num2    EQU     32      ; Second number input
,,,Result  EQU     33      ; Calculated result
,,,Oper    EQU     34      ; Operation code store
,,,Temp    EQU     35      ; Temporary register for subtract
,,,Kcount  EQU     36      ; Count of keys hit
,,,Kcode   EQU     37      ; ASCII code for key
,,,Msd     EQU     38      ; Most significant digit of result
,,,Lsd     EQU     39      ; Least significant digit of result
,,,Kval    EQU     40      ; Key numerical value
,,,
,,,RS      EQU     1       ; Register select output bit
,,,E       EQU     2       ; Display data strobe
,,,
,,,; Program begins ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,
,,,        ORG     0               ; Default start address
00000000,0000,,        NOP                     ; required for ICD mode
,,,
00000001,1683 1303,,        BANKSEL TRISC           ; Select bank 1
00000003,30F0,,        MOVLW   B'11110000'     ; Keypad direction code
00000004,0087,,        MOVWF   TRISC           ;
00000005,0188,,        CLRF    TRISD           ; Display port is output
,,,
00000006,1283 1303,,        BANKSEL PORTC           ; Select bank 0
00000008,30FF,,        MOVLW   0FF             ;
00000009,0087,,        MOVWF   PORTC           ; Set keypad outputs high
0000000A,0188,,        CLRF    PORTD           ; Clear display outputs
0000000B,280C,,        GOTO    start           ; Jump to main program
,,,
,,,
,,,; MAIN LOOP ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,
0000000C,2050,start,start   CALL    inid            ; Initialise the display
0000000D,3080,,        MOVLW   0x80            ; position to home cursor
0000000E,10F4,,        BCF     Select,RS       ; Select command mode
0000000F,2040,,        CALL    send            ; and send code
,,,
00000010,0103,,        CLRW    Char            ; ASCII = 0
00000011,0103,,        CLRW    Kval            ; Key value = 0
00000012,0103,,        CLRW    DFlag           ; Digit flags = 0
,,,
00000013,206B,scan,scan    CALL    keyin           ; Scan keypad
00000014,08B0,,        MOVF    Char,1          ; test character code
00000015,1D03,,        BTFSS   STATUS,Z        ; key pressed?
00000016,2818,,        GOTO    keyon           ; yes - wait for release
00000017,2813,,        GOTO    scan            ; no - scan again
,,,
00000018,0830,keyon,keyon   MOVF    Char,W          ; Copy..
00000019,00B7,,        MOVWF   Kcode           ; ..ASCIIcode
0000001A,3032,,        MOVLW   D'50'           ; delay for..
0000001B,2036,,        CALL    xms             ; ..50ms debounce
,,,
0000001C,206B,wait,wait    CALL    keyin           ; scan keypad again
0000001D,08B0,,        MOVF    Char,1          ; test character code
0000001E,1D03,,        BTFSS   STATUS,Z        ; key pressed?
0000001F,281C,,        GOTO    wait            ; no - rescan
00000020,20E4,,        CALL    disout          ; yes - show symbol
,,,
00000021,0AB6,,        INCF    Kcount          ; inc count..
00000022,0836,,        MOVF    Kcount,W        ; ..of keys pressed
00000023,0782,,        ADDWF   PCL             ; jump into table
00000024,0000,,        NOP
00000025,282A,,        GOTO    first           ; process first key
00000026,2813,,        GOTO    scan            ; get operation key
00000027,282D,,        GOTO    second          ; process second symbol
00000028,28E8,,        GOTO    calc            ; calculate result
00000029,2945,,        GOTO    clear           ; clear display
,,,
0000002A,0840,first,first   MOVF    Kval,W          ; store..
0000002B,00B1,,        MOVWF   Num1            ; first num
0000002C,2813,,        GOTO    scan            ; and get op key
,,,
0000002D,0840,second,second  MOVF    Kval,W          ; store..
0000002E,00B2,,        MOVWF   Num2            ; second number
0000002F,2813,,        GOTO    scan            ; and get equals key
,,,
,,,
,,,; SUBROUTINES ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
,,,
,,,; Include LCD driver routine
,,,
,,,        INCLUDE "LCDIS.INC"
,,,;--------------------------------------------------------------
,,,;       LCDIS.INC               MPB     19-12-05
,,,;
,,,;       Include file to operate 16x2 LCD display
,,,;       Uses GPR 70 - 75
,,,;
,,,;       Final version
,,,;--------------------------------------------------------------
,,,
,,,Timer1  EQU     70              ; 1ms count register
,,,TimerX  EQU     71              ; Xms count register
,,,Var     EQU     72              ; Output variable
,,,Point   EQU     73              ; Program table pointer
,,,Select  EQU     74              ; Used to set or clear RS bit
,,,OutCod  EQU     75              ; Temp store for output code
,,,
,,,RS      EQU     1               ; Register select output bit
,,,E       EQU     2               ; Enable display input
,,,
,,,
,,,;--------------------------------------------------------------
,,,;       1ms delay with 1us cycle time (1000 cycles)
,,,;--------------------------------------------------------------
00000030,30F9,onems,onems   MOVLW   D'249'          ; Count for 1ms delay
00000031,00F0,,        MOVWF   Timer1          ; Load count
00000032,0000,loop1,loop1   NOP                     ; Pad for 4 cycle loop
00000033,0BF0,,        DECFSZ  Timer1          ; Count
00000034,2832,,        GOTO    loop1           ; until Z
00000035,0008,,        RETURN                  ; and finish
,,,
,,,;--------------------------------------------------------------
,,,;       Delay Xms
,,,;       Receives count in W, uses Onems
,,,;--------------------------------------------------------------
00000036,00F1,xms,xms     MOVWF   TimerX          ; Count for X ms
00000037,2030,loopX,loopX   CALL    onems           ; Delay 1ms
00000038,0BF1,,        DECFSZ  TimerX          ; Repeat X times
00000039,2837,,        GOTO    loopX           ; until Z
0000003A,0008,,        RETURN                  ; and finish
,,,
,,,;--------------------------------------------------------------
,,,;       Generate data/command clock siganl E
,,,;--------------------------------------------------------------
0000003B,1508,pulseE,pulseE  BSF     PORTD,E         ; Set E high
0000003C,2030,,        CALL    onems           ; Delay 1ms
0000003D,1108,,        BCF     PORTD,E         ; Reset E low
0000003E,2030,,        CALL    onems           ; Delay 1ms
0000003F,0008,,        RETURN                  ; done
,,,
,,,;--------------------------------------------------------------
,,,;       Send a command byte in two nibbles from RB4 - RB7
,,,;       Receives command in W, uses PulseE and Onems
,,,;--------------------------------------------------------------
00000040,00F5,send,send    MOVWF   OutCod          ; Store output code
00000041,39F0,,        ANDLW   0F0             ; Clear low nybble
00000042,0088,,        MOVWF   PORTD           ; Output high nybble
00000043,18F4,,        BTFSC   Select,RS       ; Test RS bit
00000044,1488,,        BSF     PORTD,RS        ; and set for data
00000045,203B,,        CALL    pulseE          ; and clock display register
00000046,2030,,        CALL    onems           ; wait 1ms for display
,,,
00000047,0EF5,,        SWAPF   OutCod          ; Swap low and high nybbles
00000048,0875,,        MOVF    OutCod,W        ; Retrieve output code
00000049,39F0,,        ANDLW   0F0             ; Clear low nybble
0000004A,0088,,        MOVWF   PORTD           ; Output low nybble
0000004B,18F4,,        BTFSC   Select,RS       ; Test RS bit
0000004C,1488,,        BSF     PORTD,RS        ; and set for data
0000004D,203B,,        CALL    pulseE          ; and clock display register
0000004E,2030,,        CALL    onems           ; wait 1ms for display
0000004F,0008,,        RETURN                  ; done
,,,
,,,;--------------------------------------------------------------
,,,;       Initialise the display
,,,;       Uses Send
,,,;--------------------------------------------------------------
00000050,3064,inid,inid    MOVLW   D'100'          ; Load count for 100ms delay
00000051,2036,,        CALL    xms             ; and wait for display start
00000052,30F0,,        MOVLW   0F0             ; Mask for select code
00000053,00F4,,        MOVWF   Select          ; High nybble not masked
,,,
00000054,3030,,        MOVLW   0x30            ; Load initial nibble
00000055,0088,,        MOVWF   PORTD           ; and output it to display
00000056,203B,,        CALL    pulseE          ; Latch initial code
00000057,3005,,        MOVLW   D'5'            ; Set delay 5ms
00000058,2036,,        CALL    xms             ; and wait
00000059,203B,,        CALL    pulseE          ; Latch initial code again
0000005A,2030,,        CALL    onems           ; Wait 1ms
0000005B,203B,,        CALL    pulseE          ; Latch initial code again
0000005C,1208,,        BCF     PORTD,4         ; Set 4-bit mode
0000005D,203B,,        CALL    pulseE          ; Latch it
,,,
0000005E,3028,,        MOVLW   0x28            ; Set 4-bit mode, 2 lines
0000005F,2040,,        CALL    send            ; and send code
00000060,3008,,        MOVLW   0x08            ; Switch off display
00000061,2040,,        CALL    send            ; and send code
00000062,3001,,        MOVLW   0x01            ; Code to clear display
00000063,2040,,        CALL    send            ; and send code
00000064,3006,,        MOVLW   0x06            ; Enable cursor auto inc
00000065,2040,,        CALL    send            ; and send code
00000066,3080,,        MOVLW   0x80            ; Zero display address
00000067,2040,,        CALL    send            ; and send code
00000068,300C,,        MOVLW   0x0C            ; Turn on display
00000069,2040,,        CALL    send            ; and send code
,,,
0000006A,0008,,        RETURN                  ; Done
,,,
,,,;--------------------------------------------------------------
,,,
,,,
,,,; Scan keypad .............................................
,,,
0000006B,300F,keyin,keyin   MOVLW   00F             ; deselect..
0000006C,0087,,        MOVWF   PORTC           ; ..all rows
0000006D,1007,,        BCF     PORTC,0         ; select row A
0000006E,2030,,        CALL    onems           ; wait output stable
,,,
0000006F,1A07,,        BTFSC   PORTC,4         ; button 7?
00000070,2876,,        GOTO    b8              ; no
00000071,3037,,        MOVLW   '7'             ; yes
00000072,00B0,,        MOVWF   Char            ; load key code
00000073,3007,,        MOVLW   07              ; and
00000074,00C0,,        MOVWF   Kval            ; key value
00000075,0008,,        RETURN
,,,
00000076,1A87,b8,b8      BTFSC   PORTC,5         ; button 8?
00000077,287D,,        GOTO    b9              ; no
00000078,3038,,        MOVLW   '8'             ; yes
00000079,00B0,,        MOVWF   Char
0000007A,3008,,        MOVLW   08
0000007B,00C0,,        MOVWF   Kval
0000007C,0008,,        RETURN
,,,
0000007D,1B07,b9,b9      BTFSC   PORTC,6         ; button 9?
0000007E,2884,,        GOTO    bd              ; no
0000007F,3039,,        MOVLW   '9'             ; yes
00000080,00B0,,        MOVWF   Char
00000081,3009,,        MOVLW   09
00000082,00C0,,        MOVWF   Kval
00000083,0008,,        RETURN
,,,
00000084,1B87,bd,bd      BTFSC   PORTC,7         ; button /?
00000085,288A,,        GOTO    rowb            ; no
00000086,302F,,        MOVLW   '/'             ; yes
00000087,00B0,,        MOVWF   Char            ; store key code
00000088,00B4,,        MOVWF   Oper            ; store operator symbol
00000089,0008,,        RETURN
,,,
0000008A,1407,rowb,rowb    BSF     PORTC,0         ; select row B
0000008B,1087,,        BCF     PORTC,1
0000008C,2030,,        CALL    onems
,,,
0000008D,1A07,,        BTFSC   PORTC,4         ; button 4?
0000008E,2894,,        GOTO    b5              ; no
0000008F,3034,,        MOVLW   '4'             ; yes
00000090,00B0,,        MOVWF   Char
00000091,3004,,        MOVLW   04
00000092,00C0,,        MOVWF   Kval
00000093,0008,,        RETURN
,,,
00000094,1A87,b5,b5      BTFSC   PORTC,5         ; button 5?
00000095,289B,,        GOTO    b6              ; no
00000096,3035,,        MOVLW   '5'             ; yes
00000097,00B0,,        MOVWF   Char
00000098,3005,,        MOVLW   05
00000099,00C0,,        MOVWF   Kval
0000009A,0008,,        RETURN
,,,
0000009B,1B07,b6,b6      BTFSC   PORTC,6         ; button 6?
0000009C,28A2,,        GOTO    bm              ; no
0000009D,3036,,        MOVLW   '6'             ; yes
0000009E,00B0,,        MOVWF   Char
0000009F,3006,,        MOVLW   06
000000A0,00C0,,        MOVWF   Kval
000000A1,0008,,        RETURN
,,,
000000A2,1B87,bm,bm      BTFSC   PORTC,7         ; button x?
000000A3,28A8,,        GOTO    rowc            ; no
000000A4,3078,,        MOVLW   'x'             ; yes
000000A5,00B0,,        MOVWF   Char
000000A6,00B4,,        MOVWF   Oper
000000A7,0008,,        RETURN
,,,
000000A8,1487,rowc,rowc    BSF     PORTC,1         ; select row C
000000A9,1107,,        BCF     PORTC,2
000000AA,2030,,        CALL    onems
,,,
000000AB,1A07,,        BTFSC   PORTC,4         ; button 1?
000000AC,28B2,,        GOTO    b2              ; no
000000AD,3031,,        MOVLW   '1'             ; yes
000000AE,00B0,,        MOVWF   Char
000000AF,3001,,        MOVLW   01
000000B0,00C0,,        MOVWF   Kval
000000B1,0008,,        RETURN
,,,
000000B2,1A87,b2,b2      BTFSC   PORTC,5         ; button 2?
000000B3,28B9,,        GOTO    b3              ; no
000000B4,3032,,        MOVLW   '2'             ; yes
000000B5,00B0,,        MOVWF   Char
000000B6,3002,,        MOVLW   02
000000B7,00C0,,        MOVWF   Kval
000000B8,0008,,        RETURN
,,,
000000B9,1B07,b3,b3      BTFSC   PORTC,6         ; button 3?
000000BA,28C0,,        GOTO    bs              ; no
000000BB,3033,,        MOVLW   '3'             ; yes
000000BC,00B0,,        MOVWF   Char
000000BD,3003,,        MOVLW   03
000000BE,00C0,,        MOVWF   Kval
000000BF,0008,,        RETURN
,,,
000000C0,1B87,bs,bs      BTFSC   PORTC,7         ; button -?
000000C1,28C6,,        GOTO    rowd            ; no
000000C2,302D,,        MOVLW   '-'             ; yes
000000C3,00B0,,        MOVWF   Char
000000C4,00B4,,        MOVWF   Oper
000000C5,0008,,        RETURN
,,,
000000C6,1507,rowd,rowd    BSF     PORTC,2         ; select row D
000000C7,1187,,        BCF     PORTC,3
000000C8,2030,,        CALL    onems
,,,
000000C9,1A07,,        BTFSC   PORTC,4         ; button C?
000000CA,28CF,,        GOTO    b0              ; no
000000CB,3063,,        MOVLW   'c'             ; yes
000000CC,00B0,,        MOVWF   Char
000000CD,00B4,,        MOVWF   Oper
000000CE,0008,,        RETURN
,,,
000000CF,1A87,b0,b0      BTFSC   PORTC,5         ; button 0?
000000D0,28D6,,        GOTO    be              ; no
000000D1,3030,,        MOVLW   '0'             ; yes
000000D2,00B0,,        MOVWF   Char
000000D3,3000,,        MOVLW   00
000000D4,00C0,,        MOVWF   Kval
000000D5,0008,,        RETURN
,,,
000000D6,1B07,be,be      BTFSC   PORTC,6         ; button =?
000000D7,28DB,,        GOTO    bp              ; no
000000D8,303D,,        MOVLW   '='             ; yes
000000D9,00B0,,        MOVWF   Char
000000DA,0008,,        RETURN
,,,
000000DB,1B87,bp,bp      BTFSC   PORTC,7         ; button +?
000000DC,28E1,,        GOTO    done            ; no
000000DD,302B,,        MOVLW   '+'             ; yes
000000DE,00B0,,        MOVWF   Char
000000DF,00B4,,        MOVWF   Oper
000000E0,0008,,        RETURN
,,,
000000E1,1587,done,done    BSF     PORTC,3         ; clear last row
000000E2,01B0,,        CLRF    Char            ; character code = 0
000000E3,0008,,        RETURN
,,,
,,,
,,,; Write display ...........................................
,,,
000000E4,0837,disout,disout  MOVF    Kcode,W         ; Load the code
000000E5,14F4,,        BSF     Select,RS       ; Select data mode
000000E6,2040,,        CALL    send            ; and send code
000000E7,0008,,        RETURN
,,,
,,,; Process operations ......................................
,,,
000000E8,0834,calc,calc    MOVF    Oper,W          ; check for add
000000E9,00B5,,        MOVWF   Temp            ; load input op code
000000EA,302B,,        MOVLW   '+'             ; load plus code
000000EB,02B5,,        SUBWF   Temp            ; compare
000000EC,1903,,        BTFSC   STATUS,Z        ; and check if same
000000ED,2901,,        GOTO    add             ; yes, jump to op
,,,
000000EE,0834,,        MOVF    Oper,W          ; check for subtract
000000EF,00B5,,        MOVWF   Temp
000000F0,302D,,        MOVLW   '-'
000000F1,02B5,,        SUBWF   Temp
000000F2,1903,,        BTFSC   STATUS,Z
000000F3,2905,,        GOTO    sub
,,,
000000F4,0834,,        MOVF    Oper,W          ; check for multiply
000000F5,00B5,,        MOVWF   Temp
000000F6,3078,,        MOVLW   'x'
000000F7,02B5,,        SUBWF   Temp
000000F8,1903,,        BTFSC   STATUS,Z
000000F9,2912,,        GOTO    mul
,,,
000000FA,0834,,        MOVF    Oper,W          ; check for divide
000000FB,00B5,,        MOVWF   Temp
000000FC,302F,,        MOVLW   '/'
000000FD,02B5,,        SUBWF   Temp
000000FE,1903,,        BTFSC   STATUS,Z
000000FF,2918,,        GOTO    div
00000100,2813,,        GOTO    scan            ; rescan if key invalid
,,,
,,,
,,,; Calclate results from 2 input numbers ...................
,,,
00000101,0831,add,add     MOVF    Num1,W          ; get first number
00000102,0732,,        ADDWF   Num2,W          ; add second
00000103,00B3,,        MOVWF   Result          ; and store result
00000104,292F,,        GOTO    outres          ; display result
,,,
,,,
00000105,1403,sub,sub     BSF     STATUS,C        ; Negative detect flag
00000106,0832,,        MOVF    Num2,W          ; get first number
00000107,0231,,        SUBWF   Num1,W          ; subtract second
00000108,00B3,,        MOVWF   Result          ; and store result
,,,
00000109,1C03,,        BTFSS   STATUS,C        ; answer negative?
0000010A,290C,,        GOTO    minus           ; yes, minus result
0000010B,292F,,        GOTO    outres          ; display result
,,,
0000010C,302D,minus,minus   MOVLW   '-'             ; load minus sign
0000010D,14F4,,        BSF     Select,RS       ; Select data mode
0000010E,2040,,        CALL    send            ; and send symbol
,,,
0000010F,09B3,,        COMF    Result          ; invert all bits
00000110,0AB3,,        INCF    Result          ; add 1
00000111,292F,,        GOTO    outres          ; display result
,,,
,,,
00000112,0831,mul,mul     MOVF    Num1,W          ; get first number
00000113,01B3,,        CLRF    Result          ; total to Z
00000114,07B3,add1,add1    ADDWF   Result          ; add to total
00000115,0BB2,,        DECFSZ  Num2            ; num2 times and
00000116,2914,,        GOTO    add1            ; repeat if not done
00000117,292F,,        GOTO    outres          ; done, display result
,,,
,,,
00000118,01B3,div,div     CLRF    Result          ; total to Z
00000119,0832,,        MOVF    Num2,W          ; get divisor
0000011A,1003,,        BCF     STATUS,C        ; set C flag
0000011B,0AB3,sub1,sub1    INCF    Result          ; count loop start
0000011C,02B1,,        SUBWF   Num1            ; subtract
0000011D,1D03,,        BTFSS   STATUS,Z        ; exact answer?
0000011E,2920,,        GOTO    neg             ; no
0000011F,292F,,        GOTO    outres          ; yes, display answer
00000120,1803,neg,neg     BTFSC   STATUS,C        ; gone negative?
00000121,291B,,        GOTO    sub1            ; no - repeat
00000122,03B3,,        DECF    Result          ; correct the result
00000123,0832,,        MOVF    Num2,W          ; get divisor
00000124,07B1,,        ADDWF   Num1            ; calc remainder
,,,
00000125,0833,,        MOVF    Result,W        ; load result
00000126,3E30,,        ADDLW   030             ; convert to ASCII
00000127,14F4,,        BSF     Select,RS       ; Select data mode
00000128,2040,,        CALL    send            ; and send result
,,,
00000129,3072,,        MOVLW   'r'             ; indicate remainder
0000012A,2040,,        CALL    send
0000012B,0831,,        MOVF    Num1,W
0000012C,3E30,,        ADDLW   030             ; convert to ASCII
0000012D,2040,,        CALL    send
0000012E,2813,,        GOTO    scan
,,,
,,,
,,,; Convert binary to BCD ...................................
,,,
0000012F,0833,outres,outres  MOVF    Result,W        ; load result
00000130,00B9,,        MOVWF   Lsd             ; into low digit store
00000131,01B8,,        CLRF    Msd             ; high digit = 0
00000132,1403,,        BSF     STATUS,C        ; set C flag
00000133,300A,,        MOVLW   D'10'           ; load 10
,,,
00000134,02B9,again,again   SUBWF   Lsd             ; sub 10 from result
00000135,0AB8,,        INCF    Msd             ; inc high digit
00000136,1803,,        BTFSC   STATUS,C        ; check if negative
00000137,2934,,        GOTO    again           ; no, keep going
00000138,07B9,,        ADDWF   Lsd             ; yes, add 10 back
00000139,03B8,,        DECF    Msd             ; inc high digit
,,,
,,,
,,,; display 2 digit BCD result ..............................
,,,
0000013A,0838,,        MOVF    Msd,W           ; load high digit result
0000013B,1903,,        BTFSC   STATUS,Z        ; check if Z
0000013C,2940,,        GOTO    lowd            ; yes, dont display Msd
,,,
0000013D,3E30,,        ADDLW   030             ; convert to ASCII
0000013E,14F4,,        BSF     Select,RS       ; Select data mode
0000013F,2040,,        CALL    send            ; and send Msd
,,,
00000140,0839,lowd,lowd    MOVF    Lsd,W           ; load low digit result
00000141,3E30,,        ADDLW   030             ; convert to ASCII
00000142,14F4,,        BSF     Select,RS       ; Select data mode
00000143,2040,,        CALL    send            ; and send Msd
,,,
00000144,2813,,        GOTO    scan            ; scan for clear key
,,,
,,,
,,,; Restart ................................................
,,,
00000145,3001,clear,clear   MOVLW   01              ; code to clear display
00000146,10F4,,        BCF     Select,RS       ; Select data mode
00000147,2040,,        CALL    send            ; and send code
00000148,01B6,,        CLRF    Kcount          ; reset count of keys
00000149,2813,,        GOTO    scan            ; and rescan keypad
,,,
,,,
,,,        END     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
